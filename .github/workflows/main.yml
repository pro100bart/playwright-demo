name: Run Tests on PR

on:
  pull_request:
    branches:
      - main  

permissions:
  contents: write  
  actions: write  
  pull-requests: write  

jobs:
  test:
    runs-on: ubuntu-latest  
    steps:
      - name: Checkout —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Debug Playwright Config & Ensure JSON Report is Set
        run: |
          echo "üìÑ –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ Playwright config..."
          cat playwright.config.ts || echo "‚ö†Ô∏è WARNING: –§–∞–π–ª playwright.config.ts –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!"
          echo "üîç –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—å, —â–æ Playwright –∑–∞–ø–∏—Å—É—î JSON-–∑–≤—ñ—Ç!"

      - name: Run tests in headless-mode
        run: npx playwright test --reporter=html,json

      - name: Debug Playwright Report Directory
        if: always()
        run: |
          echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —ñ—Å–Ω—É—î JSON-–∑–≤—ñ—Ç..."
          ls -la playwright-report || echo "‚ö†Ô∏è WARNING: –ü–∞–ø–∫–∞ playwright-report –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!"
          if [ -f "playwright-report/test-results.json" ]; then
            echo "‚úÖ JSON-–∑–≤—ñ—Ç –∑–Ω–∞–π–¥–µ–Ω–æ!"
            cat playwright-report/test-results.json | head -n 20  # –í–∏–≤–µ—Å—Ç–∏ –ø–µ—Ä—à—ñ 20 —Ä—è–¥–∫—ñ–≤ JSON –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
          else
            echo "‚ùå JSON-–∑–≤—ñ—Ç –ù–ï —Å—Ç–≤–æ—Ä–µ–Ω–æ!"
          fi

      - name: Save HTML Report (–∞—Ä—Ç–µ—Ñ–∞–∫—Ç)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: html-report-${{ github.event.pull_request.number }}
          path: playwright-report/
          retention-days: 7  

  comment:
    needs: test  
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é
        uses: actions/checkout@v4

      - name: Download HTML Report
        uses: actions/download-artifact@v4
        with:
          name: html-report-${{ github.event.pull_request.number }}
          path: playwright-report/

      - name: Count Passed/Failed Tests
        run: |
          TEST_RESULTS_FILE="playwright-report/test-results.json"
          if [ -f "$TEST_RESULTS_FILE" ]; then
            TOTAL=$(jq '[.suites[].specs[] | .tests | length] | add' $TEST_RESULTS_FILE)
            PASSED=$(jq '[.suites[].specs[].tests[] | select(.results[].status=="passed")] | length' $TEST_RESULTS_FILE)
            FAILED=$(jq '[.suites[].specs[].tests[] | select(.results[].status=="failed")] | length' $TEST_RESULTS_FILE)
            echo "‚úÖ JSON-–∑–≤—ñ—Ç –∑–Ω–∞–π–¥–µ–Ω–æ! –î–∞–Ω—ñ:"
            echo "üî¢ –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–µ—Å—Ç—ñ–≤: $TOTAL"
            echo "‚úÖ –ü—Ä–æ–π–¥–µ–Ω—ñ —Ç–µ—Å—Ç–∏: $PASSED"
            echo "‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω—ñ —Ç–µ—Å—Ç–∏: $FAILED"
          else
            echo "‚ùå JSON-–∑–≤—ñ—Ç –ù–ï –∑–Ω–∞–π–¥–µ–Ω–æ! –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ 0 –∑–Ω–∞—á–µ–Ω—å."
            TOTAL=0
            PASSED=0
            FAILED=0
          fi
          echo "TOTAL_TESTS=$TOTAL" >> $GITHUB_ENV
          echo "PASSED_TESTS=$PASSED" >> $GITHUB_ENV
          echo "FAILED_TESTS=$FAILED" >> $GITHUB_ENV

      - name: Publish comment with test summary
        uses: mshick/add-pr-comment@v2
        with:
          message: |
            üìä **–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è**
            üî¢ –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–µ—Å—Ç—ñ–≤: `${{ env.TOTAL_TESTS }}`
            ‚úÖ –í–∏–∫–æ–Ω–∞–Ω–æ —Ç–µ—Å—Ç—ñ–≤: `${{ env.PASSED_TESTS }}`
            ‚ùå –ó–∞–≤–∞–ª–µ–Ω–æ —Ç–µ—Å—Ç—ñ–≤: `${{ env.FAILED_TESTS }}`
            üîó **[–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ HTML-–∑–≤—ñ—Ç](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})**
          repo-token: ${{ secrets.GITHUB_TOKEN }}
